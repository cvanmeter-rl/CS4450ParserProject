# Generated from Expr.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,41,301,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,
        3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,
        6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,
        1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,
        1,18,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,23,1,23,
        1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,
        1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,176,
        8,28,1,29,1,29,5,29,180,8,29,10,29,12,29,183,9,29,1,30,3,30,186,
        8,30,1,30,4,30,189,8,30,11,30,12,30,190,1,31,4,31,194,8,31,11,31,
        12,31,195,1,31,1,31,4,31,200,8,31,11,31,12,31,201,1,32,1,32,5,32,
        206,8,32,10,32,12,32,209,9,32,1,32,1,32,1,33,1,33,5,33,215,8,33,
        10,33,12,33,218,9,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,3,34,227,
        8,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,3,34,236,8,34,5,34,238,8,
        34,10,34,12,34,241,9,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,
        1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,5,36,259,8,36,10,36,12,36,
        262,9,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,5,37,271,8,37,10,37,
        12,37,274,9,37,1,37,5,37,277,8,37,10,37,12,37,280,9,37,1,37,1,37,
        1,37,1,37,1,38,1,38,1,39,3,39,289,8,39,1,39,1,39,1,39,1,39,1,40,
        4,40,296,8,40,11,40,12,40,297,1,40,1,40,1,278,0,41,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
        27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
        38,77,39,79,40,81,41,1,0,7,3,0,65,90,95,95,97,122,4,0,48,57,65,90,
        95,95,97,122,1,0,48,57,3,0,10,10,13,13,34,34,3,0,10,10,13,13,39,
        39,2,0,10,10,13,13,2,0,9,9,32,32,320,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
        0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
        0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
        0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
        0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
        0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,
        0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,
        0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,1,83,1,0,0,0,3,87,1,
        0,0,0,5,90,1,0,0,0,7,92,1,0,0,0,9,98,1,0,0,0,11,101,1,0,0,0,13,106,
        1,0,0,0,15,111,1,0,0,0,17,113,1,0,0,0,19,115,1,0,0,0,21,117,1,0,
        0,0,23,119,1,0,0,0,25,121,1,0,0,0,27,123,1,0,0,0,29,125,1,0,0,0,
        31,127,1,0,0,0,33,130,1,0,0,0,35,133,1,0,0,0,37,136,1,0,0,0,39,139,
        1,0,0,0,41,141,1,0,0,0,43,144,1,0,0,0,45,146,1,0,0,0,47,149,1,0,
        0,0,49,152,1,0,0,0,51,155,1,0,0,0,53,159,1,0,0,0,55,162,1,0,0,0,
        57,175,1,0,0,0,59,177,1,0,0,0,61,185,1,0,0,0,63,193,1,0,0,0,65,203,
        1,0,0,0,67,212,1,0,0,0,69,221,1,0,0,0,71,244,1,0,0,0,73,256,1,0,
        0,0,75,265,1,0,0,0,77,285,1,0,0,0,79,288,1,0,0,0,81,295,1,0,0,0,
        83,84,5,102,0,0,84,85,5,111,0,0,85,86,5,114,0,0,86,2,1,0,0,0,87,
        88,5,105,0,0,88,89,5,110,0,0,89,4,1,0,0,0,90,91,5,58,0,0,91,6,1,
        0,0,0,92,93,5,119,0,0,93,94,5,104,0,0,94,95,5,105,0,0,95,96,5,108,
        0,0,96,97,5,101,0,0,97,8,1,0,0,0,98,99,5,105,0,0,99,100,5,102,0,
        0,100,10,1,0,0,0,101,102,5,101,0,0,102,103,5,108,0,0,103,104,5,105,
        0,0,104,105,5,102,0,0,105,12,1,0,0,0,106,107,5,101,0,0,107,108,5,
        108,0,0,108,109,5,115,0,0,109,110,5,101,0,0,110,14,1,0,0,0,111,112,
        5,40,0,0,112,16,1,0,0,0,113,114,5,41,0,0,114,18,1,0,0,0,115,116,
        5,42,0,0,116,20,1,0,0,0,117,118,5,47,0,0,118,22,1,0,0,0,119,120,
        5,37,0,0,120,24,1,0,0,0,121,122,5,43,0,0,122,26,1,0,0,0,123,124,
        5,45,0,0,124,28,1,0,0,0,125,126,5,61,0,0,126,30,1,0,0,0,127,128,
        5,43,0,0,128,129,5,61,0,0,129,32,1,0,0,0,130,131,5,45,0,0,131,132,
        5,61,0,0,132,34,1,0,0,0,133,134,5,42,0,0,134,135,5,61,0,0,135,36,
        1,0,0,0,136,137,5,47,0,0,137,138,5,61,0,0,138,38,1,0,0,0,139,140,
        5,60,0,0,140,40,1,0,0,0,141,142,5,60,0,0,142,143,5,61,0,0,143,42,
        1,0,0,0,144,145,5,62,0,0,145,44,1,0,0,0,146,147,5,62,0,0,147,148,
        5,61,0,0,148,46,1,0,0,0,149,150,5,61,0,0,150,151,5,61,0,0,151,48,
        1,0,0,0,152,153,5,33,0,0,153,154,5,61,0,0,154,50,1,0,0,0,155,156,
        5,97,0,0,156,157,5,110,0,0,157,158,5,100,0,0,158,52,1,0,0,0,159,
        160,5,111,0,0,160,161,5,114,0,0,161,54,1,0,0,0,162,163,5,110,0,0,
        163,164,5,111,0,0,164,165,5,116,0,0,165,56,1,0,0,0,166,167,5,84,
        0,0,167,168,5,114,0,0,168,169,5,117,0,0,169,176,5,101,0,0,170,171,
        5,70,0,0,171,172,5,97,0,0,172,173,5,108,0,0,173,174,5,115,0,0,174,
        176,5,101,0,0,175,166,1,0,0,0,175,170,1,0,0,0,176,58,1,0,0,0,177,
        181,7,0,0,0,178,180,7,1,0,0,179,178,1,0,0,0,180,183,1,0,0,0,181,
        179,1,0,0,0,181,182,1,0,0,0,182,60,1,0,0,0,183,181,1,0,0,0,184,186,
        5,45,0,0,185,184,1,0,0,0,185,186,1,0,0,0,186,188,1,0,0,0,187,189,
        7,2,0,0,188,187,1,0,0,0,189,190,1,0,0,0,190,188,1,0,0,0,190,191,
        1,0,0,0,191,62,1,0,0,0,192,194,7,2,0,0,193,192,1,0,0,0,194,195,1,
        0,0,0,195,193,1,0,0,0,195,196,1,0,0,0,196,197,1,0,0,0,197,199,5,
        46,0,0,198,200,7,2,0,0,199,198,1,0,0,0,200,201,1,0,0,0,201,199,1,
        0,0,0,201,202,1,0,0,0,202,64,1,0,0,0,203,207,5,34,0,0,204,206,8,
        3,0,0,205,204,1,0,0,0,206,209,1,0,0,0,207,205,1,0,0,0,207,208,1,
        0,0,0,208,210,1,0,0,0,209,207,1,0,0,0,210,211,5,34,0,0,211,66,1,
        0,0,0,212,216,5,39,0,0,213,215,8,4,0,0,214,213,1,0,0,0,215,218,1,
        0,0,0,216,214,1,0,0,0,216,217,1,0,0,0,217,219,1,0,0,0,218,216,1,
        0,0,0,219,220,5,39,0,0,220,68,1,0,0,0,221,226,5,91,0,0,222,227,3,
        61,30,0,223,227,3,63,31,0,224,227,3,65,32,0,225,227,3,67,33,0,226,
        222,1,0,0,0,226,223,1,0,0,0,226,224,1,0,0,0,226,225,1,0,0,0,227,
        239,1,0,0,0,228,229,5,44,0,0,229,230,5,32,0,0,230,235,1,0,0,0,231,
        236,3,61,30,0,232,236,3,63,31,0,233,236,3,65,32,0,234,236,3,67,33,
        0,235,231,1,0,0,0,235,232,1,0,0,0,235,233,1,0,0,0,235,234,1,0,0,
        0,236,238,1,0,0,0,237,228,1,0,0,0,238,241,1,0,0,0,239,237,1,0,0,
        0,239,240,1,0,0,0,240,242,1,0,0,0,241,239,1,0,0,0,242,243,5,93,0,
        0,243,70,1,0,0,0,244,245,5,114,0,0,245,246,5,97,0,0,246,247,5,110,
        0,0,247,248,5,103,0,0,248,249,5,101,0,0,249,250,5,40,0,0,250,251,
        1,0,0,0,251,252,3,61,30,0,252,253,5,44,0,0,253,254,3,61,30,0,254,
        255,5,41,0,0,255,72,1,0,0,0,256,260,5,35,0,0,257,259,8,5,0,0,258,
        257,1,0,0,0,259,262,1,0,0,0,260,258,1,0,0,0,260,261,1,0,0,0,261,
        263,1,0,0,0,262,260,1,0,0,0,263,264,6,36,0,0,264,74,1,0,0,0,265,
        266,5,39,0,0,266,267,5,39,0,0,267,268,5,39,0,0,268,272,1,0,0,0,269,
        271,3,59,29,0,270,269,1,0,0,0,271,274,1,0,0,0,272,270,1,0,0,0,272,
        273,1,0,0,0,273,278,1,0,0,0,274,272,1,0,0,0,275,277,9,0,0,0,276,
        275,1,0,0,0,277,280,1,0,0,0,278,279,1,0,0,0,278,276,1,0,0,0,279,
        281,1,0,0,0,280,278,1,0,0,0,281,282,5,39,0,0,282,283,5,39,0,0,283,
        284,5,39,0,0,284,76,1,0,0,0,285,286,5,9,0,0,286,78,1,0,0,0,287,289,
        5,13,0,0,288,287,1,0,0,0,288,289,1,0,0,0,289,290,1,0,0,0,290,291,
        5,10,0,0,291,292,1,0,0,0,292,293,6,39,0,0,293,80,1,0,0,0,294,296,
        7,6,0,0,295,294,1,0,0,0,296,297,1,0,0,0,297,295,1,0,0,0,297,298,
        1,0,0,0,298,299,1,0,0,0,299,300,6,40,0,0,300,82,1,0,0,0,17,0,175,
        181,185,190,195,201,207,216,226,235,239,260,272,278,288,297,1,6,
        0,0
    ]

class ExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    BOOLEAN_LITERAL = 29
    ID = 30
    INT = 31
    FLOAT = 32
    STRINGD = 33
    STRINGS = 34
    LIST = 35
    RANGE = 36
    COMMENT = 37
    MULTILINE_COMMENT = 38
    INDENT = 39
    NEWLINE = 40
    WS = 41

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'for'", "'in'", "':'", "'while'", "'if'", "'elif'", "'else'", 
            "'('", "')'", "'*'", "'/'", "'%'", "'+'", "'-'", "'='", "'+='", 
            "'-='", "'*='", "'/='", "'<'", "'<='", "'>'", "'>='", "'=='", 
            "'!='", "'and'", "'or'", "'not'", "'\\t'" ]

    symbolicNames = [ "<INVALID>",
            "BOOLEAN_LITERAL", "ID", "INT", "FLOAT", "STRINGD", "STRINGS", 
            "LIST", "RANGE", "COMMENT", "MULTILINE_COMMENT", "INDENT", "NEWLINE", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "BOOLEAN_LITERAL", "ID", "INT", "FLOAT", 
                  "STRINGD", "STRINGS", "LIST", "RANGE", "COMMENT", "MULTILINE_COMMENT", 
                  "INDENT", "NEWLINE", "WS" ]

    grammarFileName = "Expr.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


