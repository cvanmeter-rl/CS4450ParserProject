(prog (expr assign1 (assignment_operator =) (operation "20")) (expr assign2 (assignment_operator =) (operation 123)) (expr assign3 (assignment_operator =) (operation 1.23)) (expr assign4 (assignment_operator =) (operation assign1)) (expr arith_op1 (assignment_operator =) (operation (operation 1) (arithmetic_operator +) (operation 2))) (expr arith_op2 (assignment_operator =) (operation (operation 13) (arithmetic_operator -) (operation 3))) (expr arith_op3 (assignment_operator =) (operation (operation 10) (arithmetic_operator /) (operation arith_op1))) (expr arith_op4 (assignment_operator =) (operation (operation 4.2) (arithmetic_operator *) (operation 10))) (expr arith_op5 (assignment_operator =) (operation (operation arith_op1) (arithmetic_operator %) (operation arith_op2))) (expr arith_op1 (assignment_operator +=) (operation arith_op2)) (expr arith_op2 (assignment_operator -=) (operation arith_op3)) (expr arith_op3 (assignment_operator *=) (operation arith_op4)) (expr arith_op4 (assignment_operator /=) (operation arith_op5)) (expr array1 (assignment_operator =) (operation [1, 2, 3, 4, 5])) (expr array2 (assignment_operator =) (operation ['a', 'b', 'c'])) (expr array3 (assignment_operator =) (operation [1.6, 2.7, 3.8, 4.9, 5.0])) (expr var1 (assignment_operator =) (operation 10)) (expr var2 (assignment_operator =) (operation (operation (operation var1) (arithmetic_operator /) (operation 2)) (arithmetic_operator +) (operation 5))) (expr var3 (assignment_operator =) (operation (operation var2) (arithmetic_operator %) (operation 2))) (expr var4 (assignment_operator =) (operation 1)) (expr flag (assignment_operator =) (operation True)) <EOF>)